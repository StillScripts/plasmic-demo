// This page will show up at the route /mypage

import {
  PlasmicRootProvider,
  PlasmicComponent,
  ComponentRenderData,
  extractPlasmicQueryData,
} from "@plasmicapp/loader-nextjs";
import { GetStaticProps, NextPage } from "next";
import Head from "next/head";
import { PlasmicPageProps } from ".";
import { PLASMIC } from "../utils/plasmic-init";

// Statically fetch the data needed to render Plasmic pages or components.
export const getStaticProps: GetStaticProps = async () => {
  // You can pass in multiple page paths or component names.
  const plasmicData = await PLASMIC.fetchComponentData("Homepage");
  if (!plasmicData) {
    throw new Error("No Plasmic design found");
  }

  // Cache the necessary data fetched for the page
  // *extractPlasmicQueryData was not imported in this...
  const queryCache = await extractPlasmicQueryData(
    <PlasmicRootProvider loader={PLASMIC} prefetchedData={plasmicData}>
      <PlasmicComponent component={plasmicData.entryCompMetas[0].displayName} />
    </PlasmicRootProvider>
  );
  return {
    props: {
      plasmicData,
      queryCache,
      // ...
    },

    // Using incremental static regeneration, will invalidate this page
    // after 300s (no deploy webhooks needed)
    revalidate: 300,
  };
};

// Render the page or component from Plasmic.
const MyPage: NextPage<PlasmicPageProps> = (props: {
  plasmicData: ComponentRenderData;
  queryCache?: Record<string, any>;
}) => {
  return (
    <PlasmicRootProvider
      loader={PLASMIC}
      prefetchedData={props.plasmicData}
      prefetchedQueryData={props.queryCache}
    >
      <Head>
        <title>Plasmic Full-Page Demo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PlasmicComponent component="Homepage" />
    </PlasmicRootProvider>
  );
};

export default MyPage;
